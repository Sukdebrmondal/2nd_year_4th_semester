CREATE DATABASE IF NOT EXISTS SQL_ASSIGHMENT;
USE SQL_ASSIGHMENT;

CREATE TABLE IF NOT EXISTS STUDENTS(
NAME VARCHAR(50),
ROLL INT PRIMARY KEY,
ADDRESS VARCHAR(50),
MAIN VARCHAR(50)
);

INSERT INTO STUDENTS (NAME,ROLL,ADDRESS,MAIN)
 VALUES
("SUKDEB MONDAL",340,"DHALLA","COMPUTER SCIENCE"),
("AMIT MONDAL",260,"BOLPUR","COMPUTER SCIENCE"),
("BISNU MONDAL",320,"MALLARPUR","COMPUTER SCIENCE"),
("RAJKUMAR DAS",261,"BANKURA","COMPUTER SCIENCE"),
("SURYA BHOWMIK",358,"DUGRAPUR","COMPUTER SCIENCE"),
("SAPTARSHI GHOSH",333,"KOLKATA","COMPUTER SCIENCE");

SELECT * FROM STUDENTS;


CREATE TABLE IF NOT EXISTS OFFERING(
BRANCH VARCHAR(50),
COURSE VARCHAR(50)PRIMARY KEY
);

INSERT INTO OFFERING (BRANCH, COURSE) VALUES
('Computer Science', 'DATA STRUCTURE'),
('Computer Science', 'Machine Learning'),
('Computer Science', 'DBMS'),
('Computer Science', 'OPERATING SYSTEM'),
('Computer Science', 'ALGORITHM AND ANALYSIS');

SELECT * FROM OFFERING;


CREATE TABLE IF NOT EXISTS FACULTY (
COURSE VARCHAR(50),
FACULTY VARCHAR(50),
SEMESTER VARCHAR(50),
FOREIGN KEY(COURSE) REFERENCES OFFERING(COURSE)
);

INSERT INTO FACULTY (COURSE, FACULTY, SEMESTER) VALUES
('DATA STRUCTURE', 'ANJAN G', 'Sem 1'),
('Machine Learning', 'SABRAJIT MANNA', 'Sem 5'),
('DBMS', 'SAMARESH M', 'Sem 4'),
('OPERATING SYSTEM', 'AVISHEK BARMAN', 'Sem 4'),
('ALGORITHM AND ANALYSIS', 'SABRAJIT MANNA', 'Sem 4');

SELECT * FROM FACULTY;


CREATE TABLE IF NOT EXISTS ADMISSION(
ROLL INT,
COURSE VARCHAR(50),
SEMESTER VARCHAR(50),
FOREIGN KEY(ROLL) REFERENCES STUDENTS(ROLL),
FOREIGN KEY(COURSE) REFERENCES OFFERING(COURSE)
);


INSERT INTO ADMISSION (ROLL, COURSE, SEMESTER) VALUES
(340, 'DATA STRUCTURE', 'Sem 1'),
(340, 'ALGORITHM AND ANALYSIS', 'Sem 4'),
(340,"OPERATING SYSTEM","SEM 4"),
(340, 'Machine Learning', 'Sem 5'),

(261,"DBMS","SEM 4"),
(261,"OPERATING SYSTEM","SEM 4"),
(261,"Machine Learning","SEM 5"),

(320,"DATA STRUCTURE","SEM 1"),
(320, 'Machine Learning', 'Sem 5'),
(320,"OPERATING SYSTEM","SEM 4"),

(358, 'DATA STRUCTURE', 'Sem 1'),
(358, 'ALGORITHM AND ANALYSIS', 'Sem 4'),
(358, 'Machine Learning', 'Sem 5'),

(333,"DATA STRUCTURE","SEM 1"),
(333,"DBMS","SEM 4"),
(333,'ALGORITHM AND ANALYSIS','Sem 4'),
(333,"OPERATING SYSTEM","SEM 4"),
(333, 'Machine Learning', 'Sem 5');


SELECT * FROM ADMISSION;

-- 1. All courses taken by a given student.
SELECT S.NAME,A.ROLL,A.COURSE FROM STUDENTS AS S
JOIN ADMISSION AS A
ON S.ROLL = A.ROLL
WHERE S.NAME="RAJKUMAR DAS";


-- 2. Names of the students admitted in a particular course in a given semester.

SELECT S.NAME , A.ROLL,A.COURSE,A.SEMESTER FROM STUDENTS AS S
JOIN ADMISSION AS A
ON S.ROLL = A.ROLL
WHERE A.SEMESTER="SEM 5" AND A.COURSE="Machine Learning";



 -- 3. Were two students (x and y) ever admitted in the same course in the same semester?
 
 SELECT S.NAME ,A.ROLL,A.COURSE,A.SEMESTER FROM STUDENTS AS S
 JOIN ADMISSION AS A
 ON S.ROLL = A.ROLL
 WHERE A.ROLL IN (333,340) AND A.COURSE="DATA STRUCTURE";
 
 
 
 -- 4. Students who have taken all courses offered by a given faculty.
 
 SELECT S.NAME, A.COURSE FROM STUDENTS AS S
 JOIN ADMISSION AS A
 ON S.ROLL = A.ROLL
 WHERE A.COURSE IN(
	SELECT COURSE FROM FACULTY WHERE FACULTY="ANJAN G"
 );
 
 -- 5. Find the name of the faculty who taught maximum courses.
SELECT FACULTY,COUNT(*)AS COUNT FROM FACULTY
GROUP BY FACULTY
ORDER BY COUNT(COURSE) DESC;